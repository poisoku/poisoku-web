#!/usr/bin/env node

/**
 * Ê≠£„Åó„ÅÑ„É¢„Éê„Ç§„É´Áâà„Çª„É¨„ÇØ„Çø„ÅÆ„ÉÜ„Çπ„Éà
 */

const puppeteer = require('puppeteer');

async function testCorrectSelectors() {
  console.log('üß™ „É¢„Éê„Ç§„É´ÁâàÊ≠£„Åó„ÅÑ„Çª„É¨„ÇØ„Çø„ÉÜ„Çπ„Éà');
  console.log('='.repeat(60));
  
  const browser = await puppeteer.launch({ 
    headless: false,
    args: ['--no-sandbox'] 
  });
  
  try {
    const page = await browser.newPage();
    
    await page.setUserAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Mobile/15E148 Safari/604.1');
    await page.setViewport({ width: 375, height: 812, isMobile: true, hasTouch: true });
    
    await page.goto('https://pointi.jp/list.php?category=161', { waitUntil: 'networkidle2' });
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    // Ê°à‰ª∂ÊäΩÂá∫„ÉÜ„Çπ„Éà
    const campaignData = await page.evaluate(() => {
      const campaigns = [];
      
      // ÂÄôË£ú1: .title „ÇíÊåÅ„Å§Ë¶ÅÁ¥†„ÅÆË¶™„Ç≥„É≥„ÉÜ„Éä„ÇíÊ°à‰ª∂Ë¶ÅÁ¥†„Å®„Åô„Çã
      const titleElements = document.querySelectorAll('.title');
      
      console.log('Title elements found:', titleElements.length);
      
      titleElements.forEach((titleEl, index) => {
        const campaign = {};
        
        // „Çø„Ç§„Éà„É´ÂèñÂæó
        campaign.title = titleEl.textContent.trim();
        
        // Ë¶™Ë¶ÅÁ¥†„ÇíËæø„Å£„Å¶Ê°à‰ª∂„Ç≥„É≥„ÉÜ„Éä„ÇíÁâπÂÆö
        let container = titleEl.parentElement;
        while (container && !container.classList.contains('box01') && container.tagName !== 'BODY') {
          container = container.parentElement;
        }
        
        if (container) {
          // „Éù„Ç§„É≥„ÉàÊÉÖÂ†±„ÇíÊ§úÁ¥¢
          const pointEl = container.querySelector('.point, .point2');
          if (pointEl) {
            campaign.points = pointEl.textContent.trim();
          }
          
          // „É™„É≥„ÇØÊÉÖÂ†±„ÇíÊ§úÁ¥¢
          const linkEl = container.querySelector('a[href*=\"/ad/\"], a[href*=\"ad_details\"]');
          if (linkEl) {
            campaign.url = linkEl.href;
            // IDÊäΩÂá∫
            const idMatch = linkEl.href.match(/\/ad\/(\d+)\/|ad_details\/(\d+)/);
            campaign.id = idMatch ? (idMatch[1] || idMatch[2]) : null;
          }
          
          // „Ç´„ÉÜ„Ç¥„É™„Ç¢„Ç§„Ç≥„É≥
          const cateEl = container.querySelector('.cate_icon');
          if (cateEl) {
            campaign.category = cateEl.textContent.trim();
          }
          
          campaigns.push(campaign);
        }
      });
      
      // ÂÄôË£ú2: .box01 „ÇíÁõ¥Êé•Ê°à‰ª∂„Ç≥„É≥„ÉÜ„Éä„Å®„Åô„Çã
      const boxElements = document.querySelectorAll('.box01');
      console.log('Box01 elements found:', boxElements.length);
      
      const boxCampaigns = [];
      boxElements.forEach((boxEl, index) => {
        const campaign = {};
        
        // „Çø„Ç§„Éà„É´
        const titleEl = boxEl.querySelector('.title');
        if (titleEl) {
          campaign.title = titleEl.textContent.trim();
        }
        
        // „Éù„Ç§„É≥„Éà
        const pointEl = boxEl.querySelector('.point, .point2');
        if (pointEl) {
          campaign.points = pointEl.textContent.trim();
        }
        
        // „É™„É≥„ÇØ
        const linkEl = boxEl.querySelector('a[href*=\"/ad/\"], a[href*=\"ad_details\"]');
        if (linkEl) {
          campaign.url = linkEl.href;
          const idMatch = linkEl.href.match(/\/ad\/(\d+)\/|ad_details\/(\d+)/);
          campaign.id = idMatch ? (idMatch[1] || idMatch[2]) : null;
        }
        
        // „Ç´„ÉÜ„Ç¥„É™
        const cateEl = boxEl.querySelector('.cate_icon');
        if (cateEl) {
          campaign.category = cateEl.textContent.trim();
        }
        
        if (campaign.title) {
          boxCampaigns.push(campaign);
        }
      });
      
      return {
        titleMethod: campaigns,
        boxMethod: boxCampaigns,
        totalTitleElements: titleElements.length,
        totalBoxElements: boxElements.length
      };
    });
    
    console.log('üìä ÊäΩÂá∫ÁµêÊûú:');
    console.log(`   .titleË¶ÅÁ¥†: ${campaignData.totalTitleElements}ÂÄã`);
    console.log(`   .box01Ë¶ÅÁ¥†: ${campaignData.totalBoxElements}ÂÄã`);
    
    console.log('\\nüéØ „Çø„Ç§„Éà„É´ÊñπÂºè„ÅßÊäΩÂá∫„Åï„Çå„ÅüÊ°à‰ª∂:');
    campaignData.titleMethod.forEach((campaign, i) => {
      console.log(`   ${i + 1}. ${campaign.title}`);
      console.log(`      „Éù„Ç§„É≥„Éà: ${campaign.points || '„Å™„Åó'}`);
      console.log(`      URL: ${campaign.url || '„Å™„Åó'}`);
      console.log(`      ID: ${campaign.id || '„Å™„Åó'}`);
    });
    
    console.log('\\nüì¶ box01ÊñπÂºè„ÅßÊäΩÂá∫„Åï„Çå„ÅüÊ°à‰ª∂:');
    campaignData.boxMethod.forEach((campaign, i) => {
      console.log(`   ${i + 1}. ${campaign.title}`);
      console.log(`      „Éù„Ç§„É≥„Éà: ${campaign.points || '„Å™„Åó'}`);
      console.log(`      URL: ${campaign.url || '„Å™„Åó'}`);
      console.log(`      ID: ${campaign.id || '„Å™„Åó'}`);
    });
    
    // „Çπ„ÇØ„É≠„Éº„É´„Åó„Å¶AJAXË™≠„ÅøËæº„Åø„Çí„ÉÜ„Çπ„Éà
    console.log('\\nüîÑ „Çπ„ÇØ„É≠„Éº„É´„ÉÜ„Çπ„Éà...');
    await page.evaluate(() => {
      window.scrollTo(0, document.body.scrollHeight);
    });
    
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    const afterScrollData = await page.evaluate(() => {
      const boxElements = document.querySelectorAll('.box01');
      return {
        boxCount: boxElements.length,
        newCampaigns: Array.from(boxElements).slice(-3).map(boxEl => {
          const titleEl = boxEl.querySelector('.title');
          return titleEl ? titleEl.textContent.trim() : '';
        }).filter(Boolean)
      };
    });
    
    console.log('\\nüìú „Çπ„ÇØ„É≠„Éº„É´Âæå:');
    console.log(`   .box01Ë¶ÅÁ¥†: ${afterScrollData.boxCount}ÂÄã`);
    console.log(`   Êñ∞„Åó„ÅÑÊ°à‰ª∂‰æã:`);
    afterScrollData.newCampaigns.forEach((title, i) => {
      console.log(`     ${i + 1}. ${title}`);
    });
    
    const increaseCount = afterScrollData.boxCount - campaignData.totalBoxElements;
    if (increaseCount > 0) {
      console.log(`\\nüéâ „Çπ„ÇØ„É≠„Éº„É´„Åß${increaseCount}ÂÄã„ÅÆÊñ∞„Åó„ÅÑÊ°à‰ª∂„ÅåË™≠„ÅøËæº„Åæ„Çå„Åæ„Åó„ÅüÔºÅ`);
    } else {
      console.log('\\n‚ùå „Çπ„ÇØ„É≠„Éº„É´„ÅßÊñ∞„Åó„ÅÑÊ°à‰ª∂„ÅØË™≠„ÅøËæº„Åæ„Çå„Åæ„Åõ„Çì„Åß„Åó„Åü');
    }
    
    console.log('\\nÊâãÂãïÁ¢∫Ë™ç„ÅÆ„Åü„ÇÅ15ÁßíÈñì„Éñ„É©„Ç¶„Ç∂„ÇíÈñã„ÅÑ„Å¶„Åä„Åç„Åæ„Åô...');
    await new Promise(resolve => setTimeout(resolve, 15000));
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error);
  } finally {
    await browser.close();
  }
}

testCorrectSelectors();