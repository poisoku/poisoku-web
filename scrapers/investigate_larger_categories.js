#!/usr/bin/env node

/**
 * „Çà„ÇäÂ§ß„Åç„Å™„Ç´„ÉÜ„Ç¥„É™„Åß„ÅÆ„Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥Ë™øÊüª
 */

const puppeteer = require('puppeteer');

async function investigateLargerCategories() {
  console.log('üîç Â§ß„Åç„Å™„Ç´„ÉÜ„Ç¥„É™„ÅÆ„Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥Ë™øÊüª');
  
  const largerCategories = [
    {
      url: 'https://pc.moppy.jp/category/list.php?parent_category=4&child_category=52&af_sorter=1&page=1',
      name: '„ÇØ„É¨„Ç∏„ÉÉ„Éà„Ç´„Éº„Éâ',
      type: 'service'
    },
    {
      url: 'https://pc.moppy.jp/category/list.php?parent_category=8&child_category=119&af_sorter=1&page=1',
      name: 'ÁæéÂÆπ„ÉªÂÅ•Â∫∑',
      type: 'shopping'
    },
    {
      url: 'https://pc.moppy.jp/category/list.php?parent_category=6&child_category=81&af_sorter=1&page=1',
      name: 'Êú¨„ÉªCD„ÉªDVD',
      type: 'shopping'
    },
    {
      url: 'https://pc.moppy.jp/category/list.php?parent_category=4&child_category=53&af_sorter=1&page=1',
      name: 'FX„ÉªÂÖàÁâ©ÂèñÂºï',
      type: 'service'
    },
    {
      url: 'https://pc.moppy.jp/category/list.php?parent_category=8&child_category=115&af_sorter=1&page=1',
      name: '„Ç∞„É´„É°„ÉªÈ£üÂìÅ',
      type: 'shopping'
    }
  ];
  
  const browser = await puppeteer.launch({
    headless: true,
    args: ['--no-sandbox', '--disable-setuid-sandbox', '--disable-blink-features=AutomationControlled']
  });
  
  try {
    for (const category of largerCategories) {
      console.log(`\nüìÇ „Ç´„ÉÜ„Ç¥„É™: ${category.name}`);
      
      const page = await browser.newPage();
      
      try {
        await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36');
        
        await page.goto(category.url, {
          waitUntil: 'networkidle2',
          timeout: 30000
        });
        
        await new Promise(r => setTimeout(r, 3000));
        
        const pageInfo = await page.evaluate(() => {
          const result = {
            title: document.title,
            mainContentItems: 0,
            totalText: '',
            pageLinks: [],
            nextPageExists: false,
            maxPage: 0
          };
          
          // 1„Éö„Éº„Ç∏ÁõÆ„ÅÆÊ°à‰ª∂Êï∞
          const items = document.querySelectorAll('.m-list__item');
          result.mainContentItems = items.length;
          
          // „Éö„Éº„Ç∏„Çø„Ç§„Éà„É´„Åã„Çâ‰ª∂Êï∞ÊÉÖÂ†±ÂèñÂæó
          const titleMatch = document.title.match(/(\d+)‰ª∂/);
          if (titleMatch) {
            result.totalText = `${titleMatch[1]}‰ª∂`;
          }
          
          // h1Ë¶ÅÁ¥†„Åã„Çâ„ÇÇ‰ª∂Êï∞ÊÉÖÂ†±„ÇíÂèñÂæó
          const h1 = document.querySelector('h1');
          if (h1) {
            const h1Match = h1.textContent.match(/Ôºà(\d+)‰ª∂Ôºâ/);
            if (h1Match) {
              result.totalText = `${h1Match[1]}‰ª∂`;
            }
          }
          
          // „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥„É™„É≥„ÇØ„ÇíÂèéÈõÜ
          const pageLinks = document.querySelectorAll('a[href*="page="]');
          pageLinks.forEach(link => {
            const href = link.href;
            const text = link.textContent.trim();
            const pageMatch = href.match(/page=(\d+)/);
            if (pageMatch) {
              const pageNum = parseInt(pageMatch[1]);
              result.pageLinks.push({ page: pageNum, text });
              result.maxPage = Math.max(result.maxPage, pageNum);
            }
          });
          
          // Ê¨°„ÅÆ„Éö„Éº„Ç∏„ÅÆÂ≠òÂú®Á¢∫Ë™ç
          const nextLink = document.querySelector('a[href*="page=2"]');
          result.nextPageExists = !!nextLink;
          
          // „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥ÊÉÖÂ†±„ÇíË©≥Á¥∞Ë°®Á§∫
          const paginationContainer = document.querySelector('.pagination, .pager, [class*="page"]');
          if (paginationContainer) {
            result.paginationHTML = paginationContainer.innerHTML.slice(0, 200);
          }
          
          return result;
        });
        
        console.log(`  üìÑ „Éö„Éº„Ç∏„Çø„Ç§„Éà„É´: ${pageInfo.title}`);
        console.log(`  üìä 1„Éö„Éº„Ç∏ÁõÆÊ°à‰ª∂Êï∞: ${pageInfo.mainContentItems}‰ª∂`);
        console.log(`  üìà Á∑è‰ª∂Êï∞Ë°®Á§∫: ${pageInfo.totalText}`);
        console.log(`  üìÑ Ê§úÂá∫„Éö„Éº„Ç∏: [${pageInfo.pageLinks.map(p => p.page).join(', ')}]`);
        console.log(`  üìÑ ÊúÄÂ§ß„Éö„Éº„Ç∏: ${pageInfo.maxPage}`);
        console.log(`  ‚û°Ô∏è Ê¨°„Éö„Éº„Ç∏Â≠òÂú®: ${pageInfo.nextPageExists ? '„ÅÇ„Çä' : '„Å™„Åó'}`);
        
        if (pageInfo.maxPage > 1) {
          console.log(`  üéØ Ë§áÊï∞„Éö„Éº„Ç∏Áô∫Ë¶ãÔºÅÁ∑è„Éö„Éº„Ç∏Êï∞: ${pageInfo.maxPage}„Éö„Éº„Ç∏`);
          const estimatedTotal = pageInfo.mainContentItems * pageInfo.maxPage;
          console.log(`  üì¶ Êé®ÂÆöÁ∑èÊ°à‰ª∂Êï∞: Á¥Ñ${estimatedTotal}‰ª∂`);
        }
        
      } catch (error) {
        console.error(`  ‚ùå „Ç®„É©„Éº: ${error.message}`);
      } finally {
        await page.close();
      }
      
      await new Promise(r => setTimeout(r, 1500));
    }
    
  } catch (error) {
    console.error('‚ùå ÂÖ®‰Ωì„Ç®„É©„Éº:', error);
  } finally {
    await browser.close();
  }
}

investigateLargerCategories().catch(console.error);