const puppeteer = require('puppeteer');

// Ë©≥Á¥∞„Éá„Éê„ÉÉ„Ç∞Ôºö„Éö„Éº„Ç∏ÊßãÈÄ†„ÇíÂÆåÂÖ®ÂàÜÊûê
async function deepDebug() {
  console.log('üî¨ „Å°„Çá„Å≥„É™„ÉÉ„ÉÅ „Éö„Éº„Ç∏ÊßãÈÄ† Ë©≥Á¥∞ÂàÜÊûê\n');
  
  const browser = await puppeteer.launch({
    headless: false, // „Éñ„É©„Ç¶„Ç∂Ë°®Á§∫
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  });
  
  try {
    const page = await browser.newPage();
    await page.setUserAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Mobile/15E148 Safari/604.1');
    await page.setViewport({ width: 375, height: 812, isMobile: true });
    
    const url = 'https://www.chobirich.com/ad_details/1794491/';
    console.log(`üì± „Ç¢„ÇØ„Çª„Çπ‰∏≠: ${url}`);
    
    await page.goto(url, {
      waitUntil: 'networkidle2', // „Éç„ÉÉ„Éà„ÉØ„Éº„ÇØÂÆåÂÖ®ÂÅúÊ≠¢„Åæ„ÅßÂæÖÊ©ü
      timeout: 60000
    });

    console.log('‚è≥ 10ÁßíÂæÖÊ©üÔºàJavaScriptÂÆüË°åÂÆå‰∫Ü„Åæ„ÅßÔºâ...');
    await new Promise(resolve => setTimeout(resolve, 10000));

    // ÂÆåÂÖ®„Å™„Éö„Éº„Ç∏ÂàÜÊûê
    const analysis = await page.evaluate(() => {
      const result = {
        url: window.location.href,
        title: document.title,
        bodyText: document.body.textContent.substring(0, 500),
        html: document.documentElement.innerHTML.substring(0, 1000),
        
        // „Åô„Åπ„Å¶„ÅÆ„Çª„É¨„ÇØ„Çø„ÇíË©≥Á¥∞„ÉÅ„Çß„ÉÉ„ÇØ
        elements: {},
        
        // „Åô„Åπ„Å¶„ÅÆh1-h6Ë¶ÅÁ¥†
        headers: [],
        
        // classÂêç„Å´title„ÇíÂê´„ÇÄË¶ÅÁ¥†
        titleClasses: [],
        
        // JavaScript„Ç®„É©„Éº
        jsErrors: []
      };
      
      // „Çª„É¨„ÇØ„ÇøË©≥Á¥∞„ÉÅ„Çß„ÉÉ„ÇØ
      const selectors = [
        'h1', 'h2', 'h3',
        '.title', '.Title',
        '[class*="title"]', '[class*="Title"]',
        '[class*="name"]', '[class*="Name"]',
        '.AdDetails__title',
        '.ad-title', '.campaign-title',
        '.item-title', '.detail-title'
      ];
      
      selectors.forEach(selector => {
        const elements = document.querySelectorAll(selector);
        result.elements[selector] = Array.from(elements).map(el => ({
          tagName: el.tagName,
          className: el.className,
          id: el.id,
          text: el.textContent.trim().substring(0, 100),
          innerHTML: el.innerHTML.substring(0, 200)
        }));
      });
      
      // „Åô„Åπ„Å¶„ÅÆ„Éò„ÉÉ„ÉÄ„ÉºË¶ÅÁ¥†
      ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].forEach(tag => {
        const headers = document.querySelectorAll(tag);
        Array.from(headers).forEach(h => {
          result.headers.push({
            tag: tag,
            className: h.className,
            text: h.textContent.trim(),
            innerHTML: h.innerHTML.substring(0, 200)
          });
        });
      });
      
      // title„ÇíÂê´„ÇÄ„ÇØ„É©„ÇπÂêç„ÅÆË¶ÅÁ¥†
      const allElements = document.querySelectorAll('*');
      Array.from(allElements).forEach(el => {
        if (el.className && typeof el.className === 'string' && 
            el.className.toLowerCase().includes('title') &&
            el.textContent.trim()) {
          result.titleClasses.push({
            tagName: el.tagName,
            className: el.className,
            text: el.textContent.trim().substring(0, 100)
          });
        }
      });
      
      return result;
    });
    
    console.log('=== Ë©≥Á¥∞ÂàÜÊûêÁµêÊûú ===');
    console.log(`URL: ${analysis.url}`);
    console.log(`Title: ${analysis.title}`);
    console.log(`Body Text (ÂÖàÈ†≠500ÊñáÂ≠ó): ${analysis.bodyText}`);
    
    console.log('\n--- „Åô„Åπ„Å¶„ÅÆ„Éò„ÉÉ„ÉÄ„ÉºË¶ÅÁ¥† ---');
    analysis.headers.forEach((h, i) => {
      console.log(`${h.tag.toUpperCase()}[${i}]: "${h.text}" (class: ${h.className})`);
    });
    
    console.log('\n--- title„ÇØ„É©„Çπ„ÇíÂê´„ÇÄË¶ÅÁ¥† ---');
    analysis.titleClasses.forEach((el, i) => {
      console.log(`${el.tagName}[${i}]: "${el.text}" (class: ${el.className})`);
    });
    
    console.log('\n--- „Çª„É¨„ÇØ„ÇøÂà•Ë¶ÅÁ¥†Êï∞ ---');
    Object.entries(analysis.elements).forEach(([selector, elements]) => {
      console.log(`${selector}: ${elements.length}‰ª∂`);
      elements.forEach((el, i) => {
        if (el.text) {
          console.log(`  [${i}] ${el.tagName}: "${el.text}" (class: ${el.className})`);
        }
      });
    });
    
    console.log('\n--- HTMLÊßãÈÄ†ÔºàÂÖàÈ†≠1000ÊñáÂ≠óÔºâ ---');
    console.log(analysis.html);
    
    // 15ÁßíÂæÖÊ©üÔºàÊâãÂãïÁ¢∫Ë™çÁî®Ôºâ
    console.log('\n‚è∏Ô∏è 15ÁßíÂæÖÊ©ü‰∏≠Ôºà„Éñ„É©„Ç¶„Ç∂„ÅßÊâãÂãïÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºâ...');
    await new Promise(resolve => setTimeout(resolve, 15000));
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error);
  } finally {
    await browser.close();
  }
}

deepDebug().catch(console.error);